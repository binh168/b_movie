{"ast":null,"code":"/*\n *  jQuery StarRatingSvg v1.2.0\n *\n *  http://github.com/nashio/star-rating-svg\n *  Author: Ignacio Chavez\n *  hello@ignaciochavez.com\n *  Licensed under MIT\n */\n;\n\n(function ($, window, document, undefined) {\n  'use strict'; // Create the defaults once\n\n  var pluginName = 'starRating';\n\n  var noop = function noop() {};\n\n  var defaults = {\n    totalStars: 5,\n    useFullStars: false,\n    starShape: 'straight',\n    emptyColor: 'lightgray',\n    hoverColor: 'orange',\n    activeColor: 'gold',\n    ratedColor: 'crimson',\n    useGradient: true,\n    readOnly: false,\n    disableAfterRate: true,\n    baseUrl: false,\n    starGradient: {\n      start: '#FEF7CD',\n      end: '#FF9511'\n    },\n    strokeWidth: 4,\n    strokeColor: 'black',\n    initialRating: 0,\n    starSize: 40,\n    callback: noop,\n    onHover: noop,\n    onLeave: noop\n  }; // The actual plugin constructor\n\n  var Plugin = function Plugin(element, options) {\n    var _rating;\n\n    var newRating;\n    var roundFn;\n    this.element = element;\n    this.$el = $(element);\n    this.settings = $.extend({}, defaults, options); // grab rating if defined on the element\n\n    _rating = this.$el.data('rating') || this.settings.initialRating; // round to the nearest half\n\n    roundFn = this.settings.forceRoundUp ? Math.ceil : Math.round;\n    newRating = (roundFn(_rating * 2) / 2).toFixed(1);\n    this._state = {\n      rating: newRating\n    }; // create unique id for stars\n\n    this._uid = Math.floor(Math.random() * 999); // override gradient if not used\n\n    if (!options.starGradient && !this.settings.useGradient) {\n      this.settings.starGradient.start = this.settings.starGradient.end = this.settings.activeColor;\n    }\n\n    this._defaults = defaults;\n    this._name = pluginName;\n    this.init();\n  };\n\n  var methods = {\n    init: function init() {\n      this.renderMarkup();\n      this.addListeners();\n      this.initRating();\n    },\n    addListeners: function addListeners() {\n      if (this.settings.readOnly) {\n        return;\n      }\n\n      this.$stars.on('mouseover', this.hoverRating.bind(this));\n      this.$stars.on('mouseout', this.restoreState.bind(this));\n      this.$stars.on('click', this.handleRating.bind(this));\n    },\n    // apply styles to hovered stars\n    hoverRating: function hoverRating(e) {\n      var index = this.getIndex(e);\n      this.paintStars(index, 'hovered');\n      this.settings.onHover(index + 1, this._state.rating, this.$el);\n    },\n    // clicked on a rate, apply style and state\n    handleRating: function handleRating(e) {\n      var index = this.getIndex(e);\n      var rating = index + 1;\n      this.applyRating(rating, this.$el);\n      this.executeCallback(rating, this.$el);\n\n      if (this.settings.disableAfterRate) {\n        this.$stars.off();\n      }\n    },\n    applyRating: function applyRating(rating) {\n      var index = rating - 1; // paint selected and remove hovered color\n\n      this.paintStars(index, 'rated');\n      this._state.rating = index + 1;\n      this._state.rated = true;\n    },\n    restoreState: function restoreState(e) {\n      var index = this.getIndex(e);\n      var rating = this._state.rating || -1; // determine star color depending on manually rated\n\n      var colorType = this._state.rated ? 'rated' : 'active';\n      this.paintStars(rating - 1, colorType);\n      this.settings.onLeave(index + 1, this._state.rating, this.$el);\n    },\n    getIndex: function getIndex(e) {\n      var $target = $(e.currentTarget);\n      var width = $target.width();\n      var side = $(e.target).attr('data-side');\n      var minRating = this.settings.minRating; // hovered outside the star, calculate by pixel instead\n\n      side = !side ? this.getOffsetByPixel(e, $target, width) : side;\n      side = this.settings.useFullStars ? 'right' : side; // get index for half or whole star\n\n      var index = $target.index() - (side === 'left' ? 0.5 : 0); // pointer is way to the left, rating should be none\n\n      index = index < 0.5 && e.offsetX < width / 4 ? -1 : index; // force minimum rating\n\n      index = minRating && minRating <= this.settings.totalStars && index < minRating ? minRating - 1 : index;\n      return index;\n    },\n    getOffsetByPixel: function getOffsetByPixel(e, $target, width) {\n      var leftX = e.pageX - $target.offset().left;\n      return leftX <= width / 2 && !this.settings.useFullStars ? 'left' : 'right';\n    },\n    initRating: function initRating() {\n      this.paintStars(this._state.rating - 1, 'active');\n    },\n    paintStars: function paintStars(endIndex, stateClass) {\n      var $polygonLeft;\n      var $polygonRight;\n      var leftClass;\n      var rightClass;\n      $.each(this.$stars, function (index, star) {\n        $polygonLeft = $(star).find('[data-side=\"left\"]');\n        $polygonRight = $(star).find('[data-side=\"right\"]');\n        leftClass = rightClass = index <= endIndex ? stateClass : 'empty'; // has another half rating, add half star\n\n        leftClass = index - endIndex === 0.5 ? stateClass : leftClass;\n        $polygonLeft.attr('class', 'svg-' + leftClass + '-' + this._uid);\n        $polygonRight.attr('class', 'svg-' + rightClass + '-' + this._uid);\n      }.bind(this));\n    },\n    renderMarkup: function renderMarkup() {\n      var s = this.settings;\n      var baseUrl = s.baseUrl ? location.href.split('#')[0] : ''; // inject an svg manually to have control over attributes\n\n      var star = '<div class=\"jq-star\" style=\"width:' + s.starSize + 'px;  height:' + s.starSize + 'px;\"><svg version=\"1.0\" class=\"jq-star-svg\" shape-rendering=\"geometricPrecision\" xmlns=\"http://www.w3.org/2000/svg\" ' + this.getSvgDimensions(s.starShape) + ' stroke-width:' + s.strokeWidth + 'px;\" xml:space=\"preserve\"><style type=\"text/css\">.svg-empty-' + this._uid + '{fill:url(' + baseUrl + '#' + this._uid + '_SVGID_1_);}.svg-hovered-' + this._uid + '{fill:url(' + baseUrl + '#' + this._uid + '_SVGID_2_);}.svg-active-' + this._uid + '{fill:url(' + baseUrl + '#' + this._uid + '_SVGID_3_);}.svg-rated-' + this._uid + '{fill:' + s.ratedColor + ';}</style>' + this.getLinearGradient(this._uid + '_SVGID_1_', s.emptyColor, s.emptyColor, s.starShape) + this.getLinearGradient(this._uid + '_SVGID_2_', s.hoverColor, s.hoverColor, s.starShape) + this.getLinearGradient(this._uid + '_SVGID_3_', s.starGradient.start, s.starGradient.end, s.starShape) + this.getVectorPath(this._uid, {\n        starShape: s.starShape,\n        strokeWidth: s.strokeWidth,\n        strokeColor: s.strokeColor\n      }) + '</svg></div>'; // inject svg markup\n\n      var starsMarkup = '';\n\n      for (var i = 0; i < s.totalStars; i++) {\n        starsMarkup += star;\n      }\n\n      this.$el.append(starsMarkup);\n      this.$stars = this.$el.find('.jq-star');\n    },\n    getVectorPath: function getVectorPath(id, attrs) {\n      return attrs.starShape === 'rounded' ? this.getRoundedVectorPath(id, attrs) : this.getSpikeVectorPath(id, attrs);\n    },\n    getSpikeVectorPath: function getSpikeVectorPath(id, attrs) {\n      return '<polygon data-side=\"center\" class=\"svg-empty-' + id + '\" points=\"281.1,129.8 364,55.7 255.5,46.8 214,-59 172.5,46.8 64,55.4 146.8,129.7 121.1,241 212.9,181.1 213.9,181 306.5,241 \" style=\"fill: transparent; stroke: ' + attrs.strokeColor + ';\" />' + '<polygon data-side=\"left\" class=\"svg-empty-' + id + '\" points=\"281.1,129.8 364,55.7 255.5,46.8 214,-59 172.5,46.8 64,55.4 146.8,129.7 121.1,241 213.9,181.1 213.9,181 306.5,241 \" style=\"stroke-opacity: 0;\" />' + '<polygon data-side=\"right\" class=\"svg-empty-' + id + '\" points=\"364,55.7 255.5,46.8 214,-59 213.9,181 306.5,241 281.1,129.8 \" style=\"stroke-opacity: 0;\" />';\n    },\n    getRoundedVectorPath: function getRoundedVectorPath(id, attrs) {\n      var fullPoints = 'M520.9,336.5c-3.8-11.8-14.2-20.5-26.5-22.2l-140.9-20.5l-63-127.7 c-5.5-11.2-16.8-18.2-29.3-18.2c-12.5,0-23.8,7-29.3,18.2l-63,127.7L28,314.2C15.7,316,5.4,324.7,1.6,336.5S1,361.3,9.9,370 l102,99.4l-24,140.3c-2.1,12.3,2.9,24.6,13,32c5.7,4.2,12.4,6.2,19.2,6.2c5.2,0,10.5-1.2,15.2-3.8l126-66.3l126,66.2 c4.8,2.6,10,3.8,15.2,3.8c6.8,0,13.5-2.1,19.2-6.2c10.1-7.3,15.1-19.7,13-32l-24-140.3l102-99.4 C521.6,361.3,524.8,348.3,520.9,336.5z';\n      return '<path data-side=\"center\" class=\"svg-empty-' + id + '\" d=\"' + fullPoints + '\" style=\"stroke: ' + attrs.strokeColor + '; fill: transparent; \" /><path data-side=\"right\" class=\"svg-empty-' + id + '\" d=\"' + fullPoints + '\" style=\"stroke-opacity: 0;\" /><path data-side=\"left\" class=\"svg-empty-' + id + '\" d=\"M121,648c-7.3,0-14.1-2.2-19.8-6.4c-10.4-7.6-15.6-20.3-13.4-33l24-139.9l-101.6-99 c-9.1-8.9-12.4-22.4-8.6-34.5c3.9-12.1,14.6-21.1,27.2-23l140.4-20.4L232,164.6c5.7-11.6,17.3-18.8,30.2-16.8c0.6,0,1,0.4,1,1 v430.1c0,0.4-0.2,0.7-0.5,0.9l-126,66.3C132,646.6,126.6,648,121,648z\" style=\"stroke: ' + attrs.strokeColor + '; stroke-opacity: 0;\" />';\n    },\n    getSvgDimensions: function getSvgDimensions(starShape) {\n      return starShape === 'rounded' ? 'width=\"550px\" height=\"500.2px\" viewBox=\"0 146.8 550 500.2\" style=\"enable-background:new 0 0 550 500.2;' : 'x=\"0px\" y=\"0px\" width=\"305px\" height=\"305px\" viewBox=\"60 -62 309 309\" style=\"enable-background:new 64 -59 305 305;';\n    },\n    getLinearGradient: function getLinearGradient(id, startColor, endColor, starShape) {\n      var height = starShape === 'rounded' ? 500 : 250;\n      return '<linearGradient id=\"' + id + '\" gradientUnits=\"userSpaceOnUse\" x1=\"0\" y1=\"-50\" x2=\"0\" y2=\"' + height + '\"><stop  offset=\"0\" style=\"stop-color:' + startColor + '\"/><stop  offset=\"1\" style=\"stop-color:' + endColor + '\"/> </linearGradient>';\n    },\n    executeCallback: function executeCallback(rating, $el) {\n      var callback = this.settings.callback;\n      callback(rating, $el);\n    }\n  };\n  var publicMethods = {\n    unload: function unload() {\n      var _name = 'plugin_' + pluginName;\n\n      var $el = $(this);\n      var $starSet = $el.data(_name).$stars;\n      $starSet.off();\n      $el.removeData(_name).remove();\n    },\n    setRating: function setRating(rating, round) {\n      var _name = 'plugin_' + pluginName;\n\n      var $el = $(this);\n      var $plugin = $el.data(_name);\n\n      if (rating > $plugin.settings.totalStars || rating < 0) {\n        return;\n      }\n\n      if (round) {\n        rating = Math.round(rating);\n      }\n\n      $plugin.applyRating(rating);\n    },\n    getRating: function getRating() {\n      var _name = 'plugin_' + pluginName;\n\n      var $el = $(this);\n      var $starSet = $el.data(_name);\n      return $starSet._state.rating;\n    },\n    resize: function resize(newSize) {\n      var _name = 'plugin_' + pluginName;\n\n      var $el = $(this);\n      var $starSet = $el.data(_name);\n      var $stars = $starSet.$stars;\n\n      if (newSize <= 1 || newSize > 200) {\n        console.log('star size out of bounds');\n        return;\n      }\n\n      $stars = Array.prototype.slice.call($stars);\n      $stars.forEach(function (star) {\n        $(star).css({\n          'width': newSize + 'px',\n          'height': newSize + 'px'\n        });\n      });\n    },\n    setReadOnly: function setReadOnly(flag) {\n      var _name = 'plugin_' + pluginName;\n\n      var $el = $(this);\n      var $plugin = $el.data(_name);\n\n      if (flag === true) {\n        $plugin.$stars.off('mouseover mouseout click');\n      } else {\n        $plugin.settings.readOnly = false;\n        $plugin.addListeners();\n      }\n    }\n  }; // Avoid Plugin.prototype conflicts\n\n  $.extend(Plugin.prototype, methods);\n\n  $.fn[pluginName] = function (options) {\n    // if options is a public method\n    if (!$.isPlainObject(options)) {\n      if (publicMethods.hasOwnProperty(options)) {\n        return publicMethods[options].apply(this, Array.prototype.slice.call(arguments, 1));\n      } else {\n        $.error('Method ' + options + ' does not exist on ' + pluginName + '.js');\n      }\n    }\n\n    return this.each(function () {\n      // preventing against multiple instantiations\n      if (!$.data(this, 'plugin_' + pluginName)) {\n        $.data(this, 'plugin_' + pluginName, new Plugin(this, options));\n      }\n    });\n  };\n})(jQuery, window, document);","map":{"version":3,"sources":["/home/anbinh/Desktop/open-ruby-2019-movie-viewer/app/javascript/packs/star_rating_svg.js"],"names":["$","window","document","undefined","pluginName","noop","defaults","totalStars","useFullStars","starShape","emptyColor","hoverColor","activeColor","ratedColor","useGradient","readOnly","disableAfterRate","baseUrl","starGradient","start","end","strokeWidth","strokeColor","initialRating","starSize","callback","onHover","onLeave","Plugin","element","options","_rating","newRating","roundFn","$el","settings","extend","data","forceRoundUp","Math","ceil","round","toFixed","_state","rating","_uid","floor","random","_defaults","_name","init","methods","renderMarkup","addListeners","initRating","$stars","on","hoverRating","bind","restoreState","handleRating","e","index","getIndex","paintStars","applyRating","executeCallback","off","rated","colorType","$target","currentTarget","width","side","target","attr","minRating","getOffsetByPixel","offsetX","leftX","pageX","offset","left","endIndex","stateClass","$polygonLeft","$polygonRight","leftClass","rightClass","each","star","find","s","location","href","split","getSvgDimensions","getLinearGradient","getVectorPath","starsMarkup","i","append","id","attrs","getRoundedVectorPath","getSpikeVectorPath","fullPoints","startColor","endColor","height","publicMethods","unload","$starSet","removeData","remove","setRating","$plugin","getRating","resize","newSize","console","log","Array","prototype","slice","call","forEach","css","setReadOnly","flag","fn","isPlainObject","hasOwnProperty","apply","arguments","error","jQuery"],"mappings":"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","sourcesContent":["/*\n *  jQuery StarRatingSvg v1.2.0\n *\n *  http://github.com/nashio/star-rating-svg\n *  Author: Ignacio Chavez\n *  hello@ignaciochavez.com\n *  Licensed under MIT\n */\n\n;(function ( $, window, document, undefined ) {\n\n  'use strict';\n\n  // Create the defaults once\n  var pluginName = 'starRating';\n  var noop = function(){};\n  var defaults = {\n    totalStars: 5,\n    useFullStars: false,\n    starShape: 'straight',\n    emptyColor: 'lightgray',\n    hoverColor: 'orange',\n    activeColor: 'gold',\n    ratedColor: 'crimson',\n    useGradient: true,\n    readOnly: false,\n    disableAfterRate: true,\n    baseUrl: false,\n    starGradient: {\n      start: '#FEF7CD',\n      end: '#FF9511'\n    },\n    strokeWidth: 4,\n    strokeColor: 'black',\n    initialRating: 0,\n    starSize: 40,\n    callback: noop,\n    onHover: noop,\n    onLeave: noop\n  };\n\n\t// The actual plugin constructor\n  var Plugin = function( element, options ) {\n    var _rating;\n    var newRating;\n    var roundFn;\n\n    this.element = element;\n    this.$el = $(element);\n    this.settings = $.extend( {}, defaults, options );\n\n    // grab rating if defined on the element\n    _rating = this.$el.data('rating') || this.settings.initialRating;\n\n    // round to the nearest half\n    roundFn = this.settings.forceRoundUp ? Math.ceil : Math.round;\n    newRating = (roundFn( _rating * 2 ) / 2).toFixed(1);\n    this._state = {\n      rating: newRating\n    };\n\n    // create unique id for stars\n    this._uid = Math.floor( Math.random() * 999 );\n\n    // override gradient if not used\n    if( !options.starGradient && !this.settings.useGradient ){\n      this.settings.starGradient.start = this.settings.starGradient.end = this.settings.activeColor;\n    }\n\n    this._defaults = defaults;\n    this._name = pluginName;\n    this.init();\n  };\n\n  var methods = {\n    init: function () {\n      this.renderMarkup();\n      this.addListeners();\n      this.initRating();\n    },\n\n    addListeners: function(){\n      if( this.settings.readOnly ){ return; }\n      this.$stars.on('mouseover', this.hoverRating.bind(this));\n      this.$stars.on('mouseout', this.restoreState.bind(this));\n      this.$stars.on('click', this.handleRating.bind(this));\n    },\n\n    // apply styles to hovered stars\n    hoverRating: function(e){\n      var index = this.getIndex(e);\n      this.paintStars(index, 'hovered');\n      this.settings.onHover(index + 1, this._state.rating, this.$el);\n    },\n\n    // clicked on a rate, apply style and state\n    handleRating: function(e){\n      var index = this.getIndex(e);\n      var rating = index + 1;\n\n      this.applyRating(rating, this.$el);\n      this.executeCallback( rating, this.$el );\n\n      if(this.settings.disableAfterRate){\n        this.$stars.off();\n      }\n    },\n\n    applyRating: function(rating){\n      var index = rating - 1;\n      // paint selected and remove hovered color\n      this.paintStars(index, 'rated');\n      this._state.rating = index + 1;\n      this._state.rated = true;\n    },\n\n    restoreState: function(e){\n      var index = this.getIndex(e);\n      var rating = this._state.rating || -1;\n      // determine star color depending on manually rated\n      var colorType = this._state.rated ? 'rated' : 'active';\n      this.paintStars(rating - 1, colorType);\n      this.settings.onLeave(index + 1, this._state.rating, this.$el);\n    },\n\n    getIndex: function(e){\n      var $target = $(e.currentTarget);\n      var width = $target.width();\n      var side = $(e.target).attr('data-side');\n      var minRating = this.settings.minRating;\n\n      // hovered outside the star, calculate by pixel instead\n      side = (!side) ? this.getOffsetByPixel(e, $target, width) : side;\n      side = (this.settings.useFullStars) ? 'right' : side ;\n\n      // get index for half or whole star\n      var index = $target.index() - ((side === 'left') ? 0.5 : 0);\n\n      // pointer is way to the left, rating should be none\n      index = ( index < 0.5 && (e.offsetX < width / 4) ) ? -1 : index;\n\n      // force minimum rating\n      index = ( minRating && minRating <= this.settings.totalStars && index < minRating ) ? minRating - 1 : index;\n      return index;\n    },\n\n    getOffsetByPixel: function(e, $target, width){\n      var leftX = e.pageX - $target.offset().left;\n      return ( leftX <= (width / 2) && !this.settings.useFullStars) ? 'left' : 'right';\n    },\n\n    initRating: function(){\n      this.paintStars(this._state.rating - 1, 'active');\n    },\n\n    paintStars: function(endIndex, stateClass){\n      var $polygonLeft;\n      var $polygonRight;\n      var leftClass;\n      var rightClass;\n\n      $.each(this.$stars, function(index, star){\n        $polygonLeft = $(star).find('[data-side=\"left\"]');\n        $polygonRight = $(star).find('[data-side=\"right\"]');\n        leftClass = rightClass = (index <= endIndex) ? stateClass : 'empty';\n\n        // has another half rating, add half star\n        leftClass = ( index - endIndex === 0.5 ) ? stateClass : leftClass;\n\n        $polygonLeft.attr('class', 'svg-'  + leftClass + '-' + this._uid);\n        $polygonRight.attr('class', 'svg-'  + rightClass + '-' + this._uid);\n\n      }.bind(this));\n    },\n\n    renderMarkup: function () {\n      var s = this.settings;\n      var baseUrl = s.baseUrl ? location.href.split('#')[0] : '';\n\n      // inject an svg manually to have control over attributes\n      var star = '<div class=\"jq-star\" style=\"width:' + s.starSize+ 'px;  height:' + s.starSize + 'px;\"><svg version=\"1.0\" class=\"jq-star-svg\" shape-rendering=\"geometricPrecision\" xmlns=\"http://www.w3.org/2000/svg\" ' + this.getSvgDimensions(s.starShape) +  ' stroke-width:' + s.strokeWidth + 'px;\" xml:space=\"preserve\"><style type=\"text/css\">.svg-empty-' + this._uid + '{fill:url(' + baseUrl + '#' + this._uid + '_SVGID_1_);}.svg-hovered-' + this._uid + '{fill:url(' + baseUrl + '#' + this._uid + '_SVGID_2_);}.svg-active-' + this._uid + '{fill:url(' + baseUrl + '#' + this._uid + '_SVGID_3_);}.svg-rated-' + this._uid + '{fill:' + s.ratedColor + ';}</style>' +\n\n      this.getLinearGradient(this._uid + '_SVGID_1_', s.emptyColor, s.emptyColor, s.starShape) +\n      this.getLinearGradient(this._uid + '_SVGID_2_', s.hoverColor, s.hoverColor, s.starShape) +\n      this.getLinearGradient(this._uid + '_SVGID_3_', s.starGradient.start, s.starGradient.end, s.starShape) +\n      this.getVectorPath(this._uid, {\n        starShape: s.starShape,\n        strokeWidth: s.strokeWidth,\n        strokeColor: s.strokeColor\n      } ) +\n      '</svg></div>';\n\n      // inject svg markup\n      var starsMarkup = '';\n      for( var i = 0; i < s.totalStars; i++){\n        starsMarkup += star;\n      }\n      this.$el.append(starsMarkup);\n      this.$stars = this.$el.find('.jq-star');\n    },\n\n    getVectorPath: function(id, attrs){\n      return (attrs.starShape === 'rounded') ?\n        this.getRoundedVectorPath(id, attrs) : this.getSpikeVectorPath(id, attrs);\n    },\n\n    getSpikeVectorPath: function(id, attrs){\n      return '<polygon data-side=\"center\" class=\"svg-empty-' + id + '\" points=\"281.1,129.8 364,55.7 255.5,46.8 214,-59 172.5,46.8 64,55.4 146.8,129.7 121.1,241 212.9,181.1 213.9,181 306.5,241 \" style=\"fill: transparent; stroke: ' + attrs.strokeColor + ';\" />' +\n        '<polygon data-side=\"left\" class=\"svg-empty-' + id + '\" points=\"281.1,129.8 364,55.7 255.5,46.8 214,-59 172.5,46.8 64,55.4 146.8,129.7 121.1,241 213.9,181.1 213.9,181 306.5,241 \" style=\"stroke-opacity: 0;\" />' +\n          '<polygon data-side=\"right\" class=\"svg-empty-' + id + '\" points=\"364,55.7 255.5,46.8 214,-59 213.9,181 306.5,241 281.1,129.8 \" style=\"stroke-opacity: 0;\" />';\n    },\n\n    getRoundedVectorPath: function(id, attrs){\n      var fullPoints = 'M520.9,336.5c-3.8-11.8-14.2-20.5-26.5-22.2l-140.9-20.5l-63-127.7 c-5.5-11.2-16.8-18.2-29.3-18.2c-12.5,0-23.8,7-29.3,18.2l-63,127.7L28,314.2C15.7,316,5.4,324.7,1.6,336.5S1,361.3,9.9,370 l102,99.4l-24,140.3c-2.1,12.3,2.9,24.6,13,32c5.7,4.2,12.4,6.2,19.2,6.2c5.2,0,10.5-1.2,15.2-3.8l126-66.3l126,66.2 c4.8,2.6,10,3.8,15.2,3.8c6.8,0,13.5-2.1,19.2-6.2c10.1-7.3,15.1-19.7,13-32l-24-140.3l102-99.4 C521.6,361.3,524.8,348.3,520.9,336.5z';\n\n      return '<path data-side=\"center\" class=\"svg-empty-' + id + '\" d=\"' + fullPoints + '\" style=\"stroke: ' + attrs.strokeColor + '; fill: transparent; \" /><path data-side=\"right\" class=\"svg-empty-' + id + '\" d=\"' + fullPoints + '\" style=\"stroke-opacity: 0;\" /><path data-side=\"left\" class=\"svg-empty-' + id + '\" d=\"M121,648c-7.3,0-14.1-2.2-19.8-6.4c-10.4-7.6-15.6-20.3-13.4-33l24-139.9l-101.6-99 c-9.1-8.9-12.4-22.4-8.6-34.5c3.9-12.1,14.6-21.1,27.2-23l140.4-20.4L232,164.6c5.7-11.6,17.3-18.8,30.2-16.8c0.6,0,1,0.4,1,1 v430.1c0,0.4-0.2,0.7-0.5,0.9l-126,66.3C132,646.6,126.6,648,121,648z\" style=\"stroke: ' + attrs.strokeColor + '; stroke-opacity: 0;\" />';\n    },\n\n    getSvgDimensions: function(starShape){\n      return (starShape === 'rounded') ? 'width=\"550px\" height=\"500.2px\" viewBox=\"0 146.8 550 500.2\" style=\"enable-background:new 0 0 550 500.2;' : 'x=\"0px\" y=\"0px\" width=\"305px\" height=\"305px\" viewBox=\"60 -62 309 309\" style=\"enable-background:new 64 -59 305 305;';\n    },\n\n    getLinearGradient: function(id, startColor, endColor, starShape){\n      var height = (starShape === 'rounded') ? 500 : 250;\n      return '<linearGradient id=\"' + id + '\" gradientUnits=\"userSpaceOnUse\" x1=\"0\" y1=\"-50\" x2=\"0\" y2=\"' + height + '\"><stop  offset=\"0\" style=\"stop-color:' + startColor + '\"/><stop  offset=\"1\" style=\"stop-color:' + endColor + '\"/> </linearGradient>';\n    },\n\n    executeCallback: function(rating, $el){\n      var callback = this.settings.callback;\n      callback(rating, $el);\n    }\n\n  };\n\n  var publicMethods = {\n\n    unload: function() {\n      var _name = 'plugin_' + pluginName;\n      var $el = $(this);\n      var $starSet = $el.data(_name).$stars;\n      $starSet.off();\n      $el.removeData(_name).remove();\n    },\n\n    setRating: function(rating, round) {\n      var _name = 'plugin_' + pluginName;\n      var $el = $(this);\n      var $plugin = $el.data(_name);\n      if( rating > $plugin.settings.totalStars || rating < 0 ) { return; }\n      if( round ){\n        rating = Math.round(rating);\n      }\n      $plugin.applyRating(rating);\n    },\n\n    getRating: function() {\n      var _name = 'plugin_' + pluginName;\n      var $el = $(this);\n      var $starSet = $el.data(_name);\n      return $starSet._state.rating;\n    },\n\n    resize: function(newSize) {\n      var _name = 'plugin_' + pluginName;\n      var $el = $(this);\n      var $starSet = $el.data(_name);\n      var $stars = $starSet.$stars;\n\n      if(newSize <= 1 || newSize > 200) {\n        console.log('star size out of bounds');\n        return;\n      }\n\n      $stars = Array.prototype.slice.call($stars);\n      $stars.forEach(function(star){\n        $(star).css({\n          'width': newSize + 'px',\n          'height': newSize + 'px'\n        });\n      });\n    },\n\n    setReadOnly: function(flag) {\n      var _name = 'plugin_' + pluginName;\n      var $el = $(this);\n      var $plugin = $el.data(_name);\n      if(flag === true){\n        $plugin.$stars.off('mouseover mouseout click');\n      } else {\n        $plugin.settings.readOnly = false;\n        $plugin.addListeners();\n      }\n    }\n\n  };\n\n\n  // Avoid Plugin.prototype conflicts\n  $.extend(Plugin.prototype, methods);\n\n  $.fn[ pluginName ] = function ( options ) {\n\n    // if options is a public method\n    if( !$.isPlainObject(options) ){\n      if( publicMethods.hasOwnProperty(options) ){\n        return publicMethods[options].apply(this, Array.prototype.slice.call(arguments, 1));\n      } else {\n        $.error('Method '+ options +' does not exist on ' + pluginName + '.js');\n      }\n    }\n\n    return this.each(function() {\n      // preventing against multiple instantiations\n      if ( !$.data( this, 'plugin_' + pluginName ) ) {\n        $.data( this, 'plugin_' + pluginName, new Plugin( this, options ) );\n      }\n    });\n  };\n\n})( jQuery, window, document );\n"]},"metadata":{},"sourceType":"module"}